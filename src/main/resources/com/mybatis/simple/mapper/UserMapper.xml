<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.simple.mapper.UserMapper">
    <cache-ref namespace="com.mybatis.simple.mapper.RoleMapper"/>
    <resultMap id="userMap" type="com.mybatis.simple.model.SysUser">

        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectById" resultMap="userMap">
        select  * from sys_user where id = #{id}
    </select>

   <!-- <select id="selectAll"  resultType="com.mybatis.simple.model.SysUser">
        select id,user_name userName,user_password userPassword,user_email userEmail,
        user_info userInfo,head_img headImg,create_time createTime
        from sys_user
    </select>-->

    <select id="selectAll"  resultType="com.mybatis.simple.model.SysUser">
        select id,user_name,user_password,user_email,
        user_info,head_img ,create_time
        from sys_user
    </select>

    <select id="selectRolesByUserId" resultType="com.mybatis.simple.model.SysRole">
        select r.id,
               r.role_name,
               r.enabled,
               r.create_by,
               r.create_time,
               u.user_name as "user.userName",
               u.user_email as "user.userEmail"
            from sys_user u
            inner join sys_user_role ur on u.id = ur.user_id
            inner join sys_role r on ur.role_id = r.id
            where u.id = #{userId}
    </select>

    <insert id="insert" >
        insert  into sys_user (id,user_name,user_password,user_email,user_info,head_img,create_time)
        values (
                #{id},#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},
                #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        insert  into sys_user (user_name,user_password,user_email,user_info,head_img,create_time)
        values (
                       #{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},
                       #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="updateById">
        update sys_user
        set user_name = #{userName},
            user_password = #{userPassword},
            user_email=#{userEmail},
            user_info=#{userInfo},
            head_img=#{headImg,jdbcType=BLOB},
            create_time=#{createTime}
        where id = #{id}
    </update>

    <delete id="deleteById">
        delete from sys_user where id=#{id}
    </delete>

    <select id="selectRolesByUserIdAndRoleEnabled"  resultType="com.mybatis.simple.model.SysRole">
        select r.id,
               r.role_name roleName,
               r.enabled,
               r.create_by createBy,
               r.create_time createTime
        from sys_user u
                 inner join sys_user_role ur on u.id = ur.user_id
                 inner join sys_role r on ur.role_id = r.id
        where u.id = #{userId} and r.enabled = #{enabled}

    </select>

    <select id="selectUserAndRoleById" resultType="com.mybatis.simple.model.SysUser">
        select
            u.id,
            u.user_name userName,
            u.user_password userPassword,
            u.user_email userEmail,
            u.user_info userInfo,
            u.head_img headImg,
            u.create_time createTime,
            r.id  "role.id",
            r.role_name "role.roleName",
            r.enabled "role.enabled",
            r.create_by "role.createBy",
            r.create_time "role.createTime"
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        where u.id = #{id}
    </select>

<!--    <resultMap id="userRoleMap" type="com.mybatis.simple.model.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        &lt;!&ndash; role相关属性&ndash;&gt;
        <result property="role.id" column="role_id"/>
        <result property="role.roleName" column="role_name"/>
        <result property="role.enabled" column="enabled"/>
        <result property="role.createBy" column="create_by"/>
        <result property="role.createTime" column="role_create_time" jdbcType="TIMESTAMP"/>
    </resultMap> -->
    <!--<resultMap id="userRoleMap" type="com.mybatis.simple.model.SysUser" extends="userMap">

        &lt;!&ndash; role相关属性&ndash;&gt;
        <result property="role.id" column="role_id"/>
        <result property="role.roleName" column="role_name"/>
        <result property="role.enabled" column="enabled"/>
        <result property="role.createBy" column="create_by"/>
        <result property="role.createTime" column="role_create_time" jdbcType="TIMESTAMP"/>
    </resultMap>-->
  <!--  <resultMap id="userRoleMap" type="com.mybatis.simple.model.SysUser" extends="userMap">

        <association property="role" columnPrefix="role_" javaType="com.mybatis.simple.model.SysRole">
            <result property="id" column="id"/>
            <result property="roleName" column="role_name"/>
            <result property="enabled" column="enabled"/>
            <result property="createBy" column="create_by"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        </association>

    </resultMap>-->
    <resultMap id="userRoleMap" type="com.mybatis.simple.model.SysUser" extends="userMap">

        <association property="role" columnPrefix="role_" resultMap="com.mybatis.simple.mapper.RoleMapper.roleMap"/>

    </resultMap>
    <select id="selectUserAndRoleById2" resultMap="userRoleMap">
        select
               u.id,
               u.user_name,
               u.user_password,
               u.user_email,
               u.user_info,
               u.head_img,
               u.create_time,
               r.id role_id,
               r.role_name role_role_name,
               r.enabled role_enabled,
               r.create_by role_create_by,
               r.create_time role_create_time
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        where u.id = #{id}
    </select>

    <resultMap id="userRoleMapSelect" extends="userMap" type="com.mybatis.simple.model.SysUser">
        <association property="role" column="{id=role_id}" fetchType="lazy" select="com.mybatis.simple.mapper.RoleMapper.selectRoleById"/>
    </resultMap>

    <select id="selectUserAndRoleByIdSelect" resultMap="userRoleMapSelect">
        select
               u.id,
               u.user_name,
               u.user_password,
               u.user_email,
               u.user_info,
               u.head_img,
               u.create_time,
               ur.role_id
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        where u.id = #{id}
    </select>

    <resultMap id="userRoleListMap"  extends="userMap" type="com.mybatis.simple.model.SysUser" >
        <collection property="roleList" columnPrefix="role_" resultMap="com.mybatis.simple.mapper.RoleMapper.rolePrivilegeListMap"/>
    </resultMap>

    <select id="selectAllUserAndRoles" resultMap="userRoleListMap">
        select
               u.id,
               u.user_name,
               u.user_password,
               u.user_email,
               u.user_info,
               u.head_img,
               u.create_time,
               r.id role_id,
               r.role_name role_role_name,
               r.enabled role_enabled,
               r.create_by role_create_by,
               r.create_time role_create_time,
               p.id role_privilege_id,
               p.privilege_name role_privilege_privilege_name,
               p.privilege_url role_privilege_privilege_url
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        inner join sys_role_privilege rp on rp.role_Id = r.id
        inner join sys_privilege p on p.id = rp.privilege_id
    </select>

    <resultMap id="userRoleListMapSelect" extends="userMap" type="com.mybatis.simple.model.SysUser">
        <collection property="roleList" fetchType="lazy" select="com.mybatis.simple.mapper.RoleMapper.selectRoleByUserId" column="{userId=id}"/>
    </resultMap>

    <select id="selectAllUserAndRolesSelect" resultMap="userRoleListMapSelect">
        select u.id,u.user_name,u.user_password,u.user_email,u.user_info,u.head_img,u.create_time from sys_user u
        where u.id = #{id}
    </select>
    
    <select id="selectUserById" statementType="CALLABLE" useCache="false">
        { call select_user_by_id(
             #{id,mode=IN},
             #{userName,mode=OUT,jdbcType=VARCHAR},
             #{userPassword,mode=OUT,jdbcType=VARCHAR},
             #{userEmail,mode=OUT,jdbcType=VARCHAR},
             #{userInfo,mode=OUT,jdbcType=VARCHAR},
             #{headImg,mode=OUT,jdbcType=BLOB,javaType=_byte[]},
             #{createTime,mode=OUT,jdbcType=TIMESTAMP}
        )}
    </select>

    <select id="selectUserPage" statementType="CALLABLE" useCache="false" resultMap="userMap">
        {call select_user_page(
                #{userName,mode=IN},
                #{offset,mode=IN},
                #{limit,mode=IN},
                #{total,mode=OUT,jdbcType=BIGINT}
        )}
    </select>

    <insert id="insertUserAndRoles" statementType="CALLABLE" >
        { call insert_user_and_roles(
          #{user.id,mode=OUT,jdbcType=BIGINT},
          #{user.userName,mode=IN},
          #{user.userPassword,mode=IN},
          #{user.userEmail,mode=IN},
          #{user.userInfo,mode=IN},
          #{user.headImg,mode=IN,jdbcType=BLOB},
          #{user.createTime,mode=OUT,jdbcType=TIMESTAMP},
          #{roleIds,mode=IN}
        )}
    </insert>
    <delete id="deleteUserById" statementType="CALLABLE" >
        {call delete_user_by_id(#{id,mode=IN})}
    </delete>
</mapper>